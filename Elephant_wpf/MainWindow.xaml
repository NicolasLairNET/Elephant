<Window x:Class="Elephant.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Elephant_wpf"
        mc:Ignorable="d"
        Title="Elephant" Height="600" Width="800" ResizeMode="CanResize" MinHeight="400" MinWidth="400">

    <Window.Resources>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style x:Key="ButtonSearchStyle" TargetType="Button">
            <Setter Property="Height" Value="34"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Padding" Value="5, 0, 5, 0"/>
            <Setter Property="Background" Value="White"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0, 8, 8, 0" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush"  Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background"  Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush"  Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground"  Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonImportStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="10, 0, 10,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="8, 0, 0,8" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush"  Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background"  Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush"  Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground"  Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonExportStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="10, 0, 10,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0, 8, 8, 0" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush"  Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background"  Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush"  Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground"  Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox" x:Key="TextboxStyle">
            <Setter Property="Height" Value="34"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="7"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                            CornerRadius="8, 0, 0, 8"
                            BorderBrush="Black"
                            BorderThickness="1"
                            Background="White"
>
                            <ScrollViewer x:Name="PART_ContentHost"
                                    Focusable="false"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Foreground" Value="#FF3C7FB1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Background="#FF174489">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Image Source="/LogoElephant.png" 
               Width="200"
               Height="100"
               Margin="20,20,0,20"
               HorizontalAlignment="Left"/>



        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" Margin="20, 20, 0, 30">
            <TextBox Name="txtName" 
                         Style="{StaticResource TextboxStyle}"
                         KeyDown="SearchTag_KeyDown" CharacterCasing="Upper"/>

            <Button x:Name="btnSearch"
                        Style="{StaticResource ButtonSearchStyle}"
                        Click="SearchTag_Click">Rechercher</Button>
        </StackPanel>

        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" Margin="0, 20,20, 30">
            <Button  x:Name="btnUpdateData" 
                     Style="{StaticResource ButtonImportStyle}" 
                     Click="BtnUpdateData_Click">Import</Button>

            <Button  x:Name="btnExportData" 
                     Style="{StaticResource ButtonExportStyle}" 
                     Click="BtnExportData_Click">Export</Button>
        </StackPanel>




        <DataGrid  Grid.Row="1" Grid.ColumnSpan="3" AutoGenerateColumns="False" Height="auto" Margin="20, 0, 20, 20" Name="DGridResult" ItemsSource="{Binding TagsList}" IsReadOnly="True" ClipboardCopyMode="IncludeHeader">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Point" Width="*" Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Paramètres" Width="*" Binding="{Binding Parameter}"/>
                <DataGridTextColumn Header="Valeur" Width="*" Binding="{Binding Value}"/>
                <DataGridTextColumn Header="Origine" Width="*" Binding="{Binding Origin}"/>
            </DataGrid.Columns>
        </DataGrid>


    </Grid>
</Window>
